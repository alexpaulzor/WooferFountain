Archive member included because of file (symbol)

/opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o)
                              fftest.o (__divmodsi4)
/opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
                              /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o (exit)
/opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
                              fftest.o (__do_clear_bss)
/opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_udivmodsi4.o)
                              /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

bfly_buff           0x200             fftest.o
pool                0x10              fftest.o
capture             0x100             fftest.o
spektrum            0x80              fftest.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
LOAD fftest.o
LOAD ffft.o
LOAD suart.o
LOAD /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a
LOAD /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/libc.a
LOAD /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb10
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000008c       0x61 fftest.o
                0x00000000000000ee                . = ALIGN (0x2)
 *fill*         0x00000000000000ed        0x1 00
                0x00000000000000ee                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ee        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ee                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ee                __ctors_start = .
 *(.ctors)
                0x00000000000000ee                __ctors_end = .
                0x00000000000000ee                __dtors_start = .
 *(.dtors)
                0x00000000000000ee                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ee        0x0 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
                0x00000000000000ee                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ee        0xc /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000fa       0x1a /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
                0x00000000000000fa                __do_copy_data
 .init4         0x0000000000000114       0x10 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000114                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000124        0x8 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000000000012c        0x4 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
                0x000000000000012c                __vector_20
                0x000000000000012c                __vector_28
                0x000000000000012c                __vector_1
                0x000000000000012c                __vector_32
                0x000000000000012c                __vector_34
                0x000000000000012c                __vector_24
                0x000000000000012c                __vector_12
                0x000000000000012c                __bad_interrupt
                0x000000000000012c                __vector_6
                0x000000000000012c                __vector_31
                0x000000000000012c                __vector_3
                0x000000000000012c                __vector_23
                0x000000000000012c                __vector_30
                0x000000000000012c                __vector_25
                0x000000000000012c                __vector_11
                0x000000000000012c                __vector_13
                0x000000000000012c                __vector_17
                0x000000000000012c                __vector_19
                0x000000000000012c                __vector_7
                0x000000000000012c                __vector_27
                0x000000000000012c                __vector_5
                0x000000000000012c                __vector_33
                0x000000000000012c                __vector_4
                0x000000000000012c                __vector_9
                0x000000000000012c                __vector_2
                0x000000000000012c                __vector_21
                0x000000000000012c                __vector_15
                0x000000000000012c                __vector_29
                0x000000000000012c                __vector_8
                0x000000000000012c                __vector_26
                0x000000000000012c                __vector_14
                0x000000000000012c                __vector_10
                0x000000000000012c                __vector_16
                0x000000000000012c                __vector_18
                0x000000000000012c                __vector_22
 .text          0x0000000000000130      0x1e0 fftest.o
                0x0000000000000130                capture_wave
                0x000000000000015c                main
 .text          0x0000000000000310      0x5a8 ffft.o
                0x0000000000000310                tbl_window
                0x0000000000000590                fft_input
                0x00000000000005ee                fft_execute
                0x0000000000000782                fft_output
                0x0000000000000890                fmuls_f
 .text          0x00000000000008b8      0x1dc suart.o
                0x00000000000008b8                xmit
                0x00000000000008d8                xmitstr
                0x00000000000008e6                xmitval
                0x000000000000094c                xmitf
                0x00000000000009cc                rcvr
                0x00000000000009f2                rcvrstr
                0x0000000000000a20                pickval
 .text          0x0000000000000a94        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000a94        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000a94        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000a94        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000000a94                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000a94       0x36 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000000a94                __divmodsi4
 .text.libgcc   0x0000000000000aca        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000aca        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000aca       0x44 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000000aca                __udivmodsi4
                0x0000000000000b0e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b0e        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
                0x0000000000000b0e                exit
                0x0000000000000b0e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b0e        0x2 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b10                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000b10
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
 .data          0x0000000000800100        0x0 fftest.o
 .data          0x0000000000800100        0x0 ffft.o
 .data          0x0000000000800100        0x0 suart.o
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100      0x390
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
 .bss           0x0000000000800100        0x0 fftest.o
 .bss           0x0000000000800100        0x0 ffft.o
 .bss           0x0000000000800100        0x0 suart.o
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800100        0x0 /opt/local/lib/gcc/avr/4.0.2/avr5/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100      0x390 fftest.o
                0x0000000000800100                bfly_buff
                0x0000000000800300                pool
                0x0000000000800310                capture
                0x0000000000800410                spektrum
                0x0000000000800490                PROVIDE (__bss_end, .)
                0x0000000000000b10                __data_load_start = LOADADDR (.data)
                0x0000000000000b10                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800490        0x0
                0x0000000000800490                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800490                PROVIDE (__noinit_end, .)
                0x0000000000800490                _end = .
                0x0000000000800490                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.stab           0x0000000000000000     0x2130
 *(.stab)
 .stab          0x0000000000000000      0x768 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o
 .stab          0x0000000000000768      0x690 fftest.o
                                        0x69c (size before relaxing)
 .stab          0x0000000000000df8      0x744 ffft.o
                                        0x750 (size before relaxing)
 .stab          0x000000000000153c      0xbf4 suart.o
                                        0xc00 (size before relaxing)

.stabstr        0x0000000000000000      0xc07
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc07 /opt/local/lib/gcc/avr/4.0.2/../../../../avr/lib/avr5/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(fftest.elf elf32-avr)
LOAD linker stubs
